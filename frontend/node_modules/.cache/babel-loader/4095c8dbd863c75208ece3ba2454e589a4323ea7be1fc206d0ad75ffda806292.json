{"ast":null,"code":"var _jsxFileName = \"/home/khailq/chat_app/frontend/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\n// src/components/ChatWindow.js\nimport React, { useState, useEffect } from 'react';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Establish WebSocket connection\n    const ws = new WebSocket('ws://localhost:8080/ws');\n    ws.onopen = () => {\n      console.log('WebSocket connection established');\n    };\n    ws.onmessage = event => {\n      try {\n        const message = JSON.parse(event.data);\n        setMessages(prevMessages => [...prevMessages, message]);\n      } catch (error) {\n        console.error('Error parsing message:', error);\n      }\n    };\n    ws.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    ws.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    setSocket(ws);\n\n    // Cleanup on component unmount\n    return () => {\n      ws.close();\n      console.log('WebSocket connection closed from cleanup');\n    };\n  }, []);\n  const sendMessage = message => {\n    if (socket) {\n      const messageData = JSON.stringify(message);\n      console.log('Sending message:', messageData);\n      socket.send(messageData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(MessageList, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      sendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"0MbKzFx+OKNdOU5qFCjPjQZWhEE=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","MessageList","MessageInput","jsxDEV","_jsxDEV","ChatWindow","_s","messages","setMessages","socket","setSocket","ws","WebSocket","onopen","console","log","onmessage","event","message","JSON","parse","data","prevMessages","error","onerror","onclose","close","sendMessage","messageData","stringify","send","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/khailq/chat_app/frontend/src/components/ChatWindow.js"],"sourcesContent":["// src/components/ChatWindow.js\nimport React, { useState, useEffect } from 'react';\nimport MessageList from './MessageList';\nimport MessageInput from './MessageInput';\n\nconst ChatWindow = () => {\n  const [messages, setMessages] = useState([]);\n  const [socket, setSocket] = useState(null);\n\n  useEffect(() => {\n    // Establish WebSocket connection\n    const ws = new WebSocket('ws://localhost:8080/ws');\n    \n    ws.onopen = () => {\n      console.log('WebSocket connection established');\n    };\n\n    ws.onmessage = (event) => {\n      try {\n        const message = JSON.parse(event.data);\n        setMessages((prevMessages) => [...prevMessages, message]);\n      } catch (error) {\n        console.error('Error parsing message:', error);\n      }\n    };\n\n    ws.onerror = (error) => {\n      console.error('WebSocket error:', error);\n    };\n\n    ws.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n\n    setSocket(ws);\n\n    // Cleanup on component unmount\n    return () => {\n      ws.close();\n      console.log('WebSocket connection closed from cleanup');\n    };\n  }, []);\n\n  const sendMessage = (message) => {\n    if (socket) {\n      const messageData = JSON.stringify(message);\n      console.log('Sending message:', messageData);\n      socket.send(messageData);\n    }\n  };\n\n  return (\n    <div className=\"chat-window\">\n      <MessageList messages={messages} />\n      <MessageInput sendMessage={sendMessage} />\n    </div>\n  );\n};\n\nexport default ChatWindow;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,EAAE,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;IAElDD,EAAE,CAACE,MAAM,GAAG,MAAM;MAChBC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IACjD,CAAC;IAEDJ,EAAE,CAACK,SAAS,GAAIC,KAAK,IAAK;MACxB,IAAI;QACF,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;QACtCb,WAAW,CAAEc,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEJ,OAAO,CAAC,CAAC;MAC3D,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdT,OAAO,CAACS,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDZ,EAAE,CAACa,OAAO,GAAID,KAAK,IAAK;MACtBT,OAAO,CAACS,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC;IAEDZ,EAAE,CAACc,OAAO,GAAG,MAAM;MACjBX,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC;IAEDL,SAAS,CAACC,EAAE,CAAC;;IAEb;IACA,OAAO,MAAM;MACXA,EAAE,CAACe,KAAK,CAAC,CAAC;MACVZ,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;IACzD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,WAAW,GAAIT,OAAO,IAAK;IAC/B,IAAIT,MAAM,EAAE;MACV,MAAMmB,WAAW,GAAGT,IAAI,CAACU,SAAS,CAACX,OAAO,CAAC;MAC3CJ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEa,WAAW,CAAC;MAC5CnB,MAAM,CAACqB,IAAI,CAACF,WAAW,CAAC;IAC1B;EACF,CAAC;EAED,oBACExB,OAAA;IAAK2B,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1B5B,OAAA,CAACH,WAAW;MAACM,QAAQ,EAAEA;IAAS;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnChC,OAAA,CAACF,YAAY;MAACyB,WAAW,EAAEA;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAAC9B,EAAA,CApDID,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAsDhB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}